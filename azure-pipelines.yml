# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 branches:
  include:
    - main
 paths:
   exclude: 
   - "**/Jenkinsfile"

pool:
  name: Default
  demands: 
    - MyCrazyBuildCapability -equals 1

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: $(solutionPath)

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'working_with_jenkins/dotnet_code/ArlingtonThisWeek/ArlingtonThisWeek.sln'
    arguments: '-o $(System.DefaultWorkingDirectory)/output'
    zipAfterPublish: false
    modifyOutputPath: false
- task: DotNetCoreCLI@2
  displayName: "Execute tests and generate coverage"
  inputs:
    command: 'test'
    projects: '$(System.DefaultWorkingDirectory)/output/**/*.Tests.dll'
    arguments: '--collect "XPlat Code Coverage" --results-directory $(System.DefaultWorkingDirectory)/output/testresults'
    publishTestResults: false
- task: PublishCodeCoverageResults@2
  displayName: "Publish Code Results"
  inputs:
    summaryFileLocation: 'cobertura.coverage.xml'
    pathToSources: '$(System.DefaultWorkingDirectory)/output/testresults/**'
    failIfCoverageEmpty: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: CmdLine@2
  inputs:
    script: 'echo "Our secret value:  $(OURSECRET)"'